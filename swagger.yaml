swagger: "2.0"
info:
  description: "Insurance quote - Service"
  version: "0.1.0"
  title: "POB.SRV0025 - Insurance quote - Service"
  contact:
    name: "Alef Bruno Delpino de Oliveira"
    email: "alef.oliveira@prudential.com"
    url: "https://www.linkedin.com/in/alefdelpino/"
basePath: "/"
schemes:
- "https"
- "http"
paths:
  /v1/auth:
    post:
      tags:
       - "Auth"
      summary: "User Authentication"
      description: "User Authentication"
      operationId: "auth"
      produces:
      - "application/json"
      parameters:
        - in: "body"
          name: "body"
          description: "Login Object"
          required: true
          schema:
            $ref: "#/definitions/LoginEntity"
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/LoginResponseEntity'
        '400':
          description: "Error: Bad Request"
          schema:
            $ref: '#/definitions/BadRequest'
        '401':
          description: "Error: Unauthorized" 
        '403':
          description: "Error: Forbidden"
        '404':
          description: "Error: Not Found"
        '422':
          description: "Error: Unprocessable Entity"
          schema:
            $ref: '#/definitions/ResponseStatus422'
        '500':
          description: "Error: Internal Server Error"
          schema:
            $ref: '#/definitions/Exception'
  /v1/data-versions:
    get:
      tags:
       - "Versions"
      summary: "Returns a list with the current version of the data update for each entity"
      description: "Returns a list with the current version of the data update for each entity, used to check for possible updates in dependent applications"
      operationId: "getDataVersion"
      produces:
      - "application/json"
      responses:
        '200':
          description: Success
          schema:
            type: "array"
            description: "List of versions for each entity"  
            items:
              $ref: '#/definitions/DataVersionEntity'
        '401':
          description: "Error: Unauthorized" 
        '403':
          description: "Error: Forbidden"
        '500':
          description: "Error: Internal Server Error"
          schema:
            $ref: '#/definitions/Exception'
      security:
        - Bearer: []
  /v1/data-versions/{entity}:
    get:
      tags:
       - "Versions"
      summary: "Returns the current version of the data update for a entity"
      description: "Returns the current version of the data update for a entity, used to check for possible updates in dependent applications"
      operationId: "getDataVersionByEntity"
      produces:
      - "application/json"
      parameters:
        - in: "path"
          name: "entity"
          description: "Entity name"
          required: true
          type: "string"
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DataVersionEntity'
        '401':
          description: "Error: Unauthorized"
        '403':
          description: "Error: Forbidden"
        '404':
          description: "Error: Not Found"
          schema:
            type: "array"
            items:
              type: "string"
              example: "Entity UserEntity is not available for client_id 4e4c000c-3278-42f6-bc81-9d6d28a588f0"
        '500':
          description: "Error: Internal Server Error"
          schema:
            $ref: '#/definitions/Exception'
      security:
        - Bearer: []
  /v1/quotations:
    get:
      tags:
       - "Quotation"
      summary: "Returns the history of insurance quotes"
      description: "Returns the history of insurance quotes made for the user of the informed jwt token, according to the filters provided via GET parameters"
      operationId: "findQuotation"
      produces:
      - "application/json"
      parameters:
        - in: "query"
          name: "id"
          description: "Quotation id"
          type: "string"
        - in: "query"
          name: "description"
          description: "Quotation description"
          type: "string"  
      responses:
        '200':
          description: Success
          schema:
            type: "array"
            description: "List of insurance quotes"  
            items:
              $ref: '#/definitions/QuotationEntity'
        '401':
          description: "Error: Unauthorized" 
        '403':
          description: "Error: Forbidden"
        '500':
          description: "Error: Internal Server Error"
          schema:
            $ref: '#/definitions/Exception'
      security:
        - Bearer: []
  /v1/quotations/{id}:
    get:
      tags:
       - "Quotation"
      summary: "Returns an insurance"
      description: "Returns an insurance quote according to the given id and user identified by the jwt token"
      operationId: "findOneQuotation"
      produces:
      - "application/json"
      parameters:
        - in: "path"
          name: "id"
          description: "Quotation id"
          required: true
          type: "string"
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/QuotationEntity'
        '400':
          description: "Error: Bad Request"
        '401':
          description: "Error: Unauthorized" 
        '403':
          description: "Error: Forbidden"
        '404':
          description: "Error: Not Found"
          schema:
            type: "array"
            items:
              type: "string"
              example: "Quotation a8c86600-9604-46a5-b513-8e1cf393ce48 is not available for client_id 4e4c000c-3278-42f6-bc81-9d6d28a588f0"
        '500':
          description: "Error: Internal Server Error"
          schema:
            $ref: '#/definitions/Exception'
      security:
        - Bearer: []
    delete:
      tags:
       - "Quotation"
      summary: "Delete an insurance"
      description: "Delete an insurance quote according to the given id and user identified by the jwt token"
      operationId: "deleteOneQuotation"
      produces:
      - "application/json"
      parameters:
        - in: "path"
          name: "id"
          description: "Quotation id"
          required: true
          type: "string"
      responses:
        '200':
          description: Success
          schema:
            type: "boolean"
            example: "true"
        '400':
          description: "Error: Bad Request"
        '401':
          description: "Error: Unauthorized" 
        '403':
          description: "Error: Forbidden"
        '404':
          description: "Error: Not Found"
          schema:
            type: "array"
            items:
              type: "string"
              example: "Quotation a8c86600-9604-46a5-b513-8e1cf393ce48 is not available for client_id 4e4c000c-3278-42f6-bc81-9d6d28a588f0"
        '500':
          description: "Error: Internal Server Error"
          schema:
            $ref: '#/definitions/Exception'
      security:
        - Bearer: []
  /v1/insurance-quote/{productId}:
    post:
      tags:
       - "Quotation"
      summary: "Performs an insurance quote"
      description: "Performs an insurance quote"
      operationId: "insuranceQuote"
      produces:
      - "application/json"
      parameters:
        - in: "path"
          name: "productId"
          type: "string"
          description: "Product id"
          required: true   
        - in: "body"
          name: "body"
          description: "Insurance Quote Object"
          required: true
          schema:
            $ref: "#/definitions/InsuranceQuoteInputEntity"
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/QuotationEntity'
        '400':
          description: "Error: Bad Request"
          schema:
            $ref: '#/definitions/BadRequest'
        '401':
          description: "Error: Unauthorized" 
        '403':
          description: "Error: Forbidden"
        '404':
          description: "Error: Not Found"
        '422':
          description: "Error: Unprocessable Entity"
          schema:
            $ref: '#/definitions/ResponseStatus422'
        '500':
          description: "Error: Internal Server Error"
          schema:
            $ref: '#/definitions/Exception'
      security:
        - Bearer: []
definitions:
  DataVersionEntity:
    type: "object"
    properties:   
      id:
        type: "string"
        description: "Verion id"
        example: "f4991d70-5609-47ad-9eeb-728afd1ac896"  
      entity:
        type: "string"
        description: "Entity name"
        example: "QuotationEntity"
      timestamp:
        type: "string"
        description: "Update date and time"
        example: "2020-07-01 15:20:46.341928+00"
  QuotationPriceEntity:
    type: "object"
    properties:
      year:
        type: "number"
        description: "Total per year"
        example: !!float 4050    
      month:
        type: "number"
        description: "Total per month"
        example: !!float 405            
    required:
     - month
  InsuranceQuoteInputAmountEntity:
    type: "object"
    properties:
      type:
        type: "string"
        description: "Type of input value used in calculating the insurance quote (capital, yearly, monthly)"
        example: "capital" 
      amount:
        type: "number"
        description: "input value used in calculating the insurance quote"
        example: !!float 150000            
    required:
     - type
     - amount
  ItemPriceEntity:
    type: "object"
    properties:
      year:
        type: "number"
        description: "Total per year"
        example: !!float 460    
      month:
        type: "number"
        description: "Total per month"
        example: !!float 46            
    required:
     - month     
  QuotationTaxesEntity:
    type: "object"
    description: "taxes charged, according to the value of the product"
    properties:
      iof:
        type: "number"
        description: "Iof value"
        example: !!float 127
      factor:
        type: "number"
        description: "Factor value"
        example: !!float 810     
  ItemTaxesEntity:
    type: "object"
    description: "taxes charged, according to the value of the product"
    properties:
      iof:
        type: "number"
        description: "Iof value"
        example: !!float 15
      factor:
        type: "number"
        description: "Factor value"
        example: !!float 92            
  ProductQuotationRateEntity:
    type: "object"
    properties:
      rate:
        type: "integer"
        description: "Calculation rate according to the product and parameters supplied"
        example: !!int 32
      additional:
        type: "integer"
        description: "Additional calculation rate according to risks identified in the prospect's lifestyle"
        example: !!int 3
      total:
        type: "integer"
        description: "Total calculation rate (rate + additional)"
        example: !!int 35
  ItemQuotationRateEntity:
    type: "object"
    properties:
      rate:
        type: "integer"
        description: "Calculation rate according to the product and parameters supplied"
        example: !!int 5
      additional:
        type: "integer"
        description: "Additional calculation rate according to risks identified in the prospect's lifestyle"
        example: !!int 3
      total:
        type: "integer"
        description: "Total calculation rate (rate + additional)"
        example: !!int 8    
  ProductTypeEntity:
    type: "object"
    properties:   
      id:
        type: "string"
        description: "Type id"
        example: "BASIC"
      name:
        type: "string"
        description: "Type name"
        example: "Cobertura Básica"
      description:
        type: "string"
        description: "Type description"
        example: "Cobertura Básica"
      others:
        type: "object"
        description: "Complementary fields and values"
        example: {}          
    required:
     - id
     - name
  ItemTypeEntity:
    type: "object"
    properties:   
      id:
        type: "string"
        description: "Type id"
        example: "ADDIT"
      name:
        type: "string"
        description: "Type name"
        example: "Cobertura Adicional"
      description:
        type: "string"
        description: "Type description"
        example: "Cobertura Adicional"
      others:
        type: "object"
        description: "Complementary fields and values"
        example: {}          
    required:
     - id
     - name   
  ProductFamilyEntity:
    type: "object"
    properties:   
      id:
        type: "string"
        description: "Family id"
        example: "WDU"
      name:
        type: "string"
        description: "Family name"
        example: "Vida Inteira Modificado"
      description:
        type: "string"
        description: "Family description"
        example: "Vida Inteira Modificado"
      others:
        type: "object"
        description: "Complementary fields and values"
        example: {}          
    required:
     - id
     - name
  ItemFamilyEntity:
    type: "object"
    properties:   
      id:
        type: "string"
        description: "Family id"
        example: "ADBU"
      name:
        type: "string"
        description: "Family name"
        example: "Morte Acidental"
      description:
        type: "string"
        description: "Family description"
        example: "Morte Acidental"
      others:
        type: "object"
        description: "Complementary fields and values"
        example: {}          
    required:
     - id
     - name   
  QuotationParametersEntity:
    type: "object"
    description: "Parameters used in the insurance quote process, according to the product"
    properties:
      age:
        type: "integer"
        description: "Parameters age"
        example: !!int 22
      gender:
        type: "string"
        description: "Parameters gender"
        example: "M"
    required:
     - age
     - gender
  InsuranceQuoteInputItemEntity:
    type: "object"
    properties:
      product:
        type: "string"
        description: "Product Id"
        example: "AB05F"
      amount:
        $ref: '#/definitions/InsuranceQuoteInputAmountEntity'
    example: {
      "product": "AB05F",
      "amount": {
        "type": "capital",
        "amount": !!float 15000
      }
    }
    required:
     - product
     - amount
  ProductQuotationEntity:
    type: "object"
    properties:   
      id:
        type: "string"
        description: "Product id"
        example: "WLUPF"
      name:
        type: "string"
        description: "Product name"
        example: "Vida Inteira Único"
      description:
        type: "string"
        description: "Product description"
        example: "Vida Inteira Único - Portfolio F - WLUPF"
      type:
        $ref: '#/definitions/ProductTypeEntity'
      family:
        $ref: '#/definitions/ProductFamilyEntity'
      capital:
        type: "number"
        description: "Amount total"
        example: !!float 15000      
      rate:
        $ref: '#/definitions/ProductQuotationRateEntity'
      taxes:
        $ref: '#/definitions/ItemTaxesEntity'
      price:
        $ref: '#/definitions/QuotationPriceEntity'
      items: 
        type: "array"
        description: "List of additional products"  
        items:
          $ref: '#/definitions/ItemQuotationEntity'
      others:
        type: "object"
        description: "Complementary fields and values"
        example: {}
    required:
     - id
     - name
  ItemQuotationEntity:
    type: "object"
    properties:   
      id:
        type: "string"
        description: "Product id"
        example: "AB05F"
      name:
        type: "string"
        description: "Product name"
        example: "Morte Acidental por 5 anos"
      description:
        type: "string"
        description: "Product description"
        example: "Morte Acidental por 5 anos - Portfolio F - AB05F"
      type:
        $ref: '#/definitions/ItemTypeEntity'
      family:
        $ref: '#/definitions/ItemFamilyEntity'
      capital:
        type: "number"
        description: "Amount total"
        example: !!float 15000      
      rate:
        $ref: '#/definitions/ItemQuotationRateEntity'
      taxes:
        $ref: '#/definitions/QuotationTaxesEntity'
      price:
        $ref: '#/definitions/ItemPriceEntity'
      others:
        type: "object"
        description: "Complementary fields and values"
        example: {}
    required:
     - id
     - name  
  InsuranceQuoteInputEntity:
    type: "object"
    properties:
      code:
        type: string
        description: "quotation identification, if you want to persist in the database (limited to 255 characters)"
        example: "CT0001-123"
      description:
        type: string
        description: "quotation description (limited to 255 characters)"
        example: "Test quotation for Fulana prospect"        
      information:
        type: "object"
        description: "field to add information that will be saved along with the insurance quote"
        example: {
          "id": "a7cbfde2-a6e8-4073-b9d7-ae62ab484d9c",
          "name": "Fulano"
        }
      rate:
        type: "integer"
        description: "Additional calculation rate according to risks identified in the prospect's lifestyle"
        example: !!int 0 
      amount:
        $ref: '#/definitions/InsuranceQuoteInputAmountEntity'        
      parameters:
        $ref: '#/definitions/QuotationParametersEntity'
      items:
        type: "array"
        items:
          $ref: '#/definitions/InsuranceQuoteInputItemEntity'
        description: "Additional products"
    required:
     - prospect
     - amount
     - parameters     
  QuotationEntity:
    type: "object"
    properties:
      id:
        type: string
        description: "quotation primary key identification"
        example: "f6e5535f-e6ce-4c8f-a847-5662be7c539a"
      clientId:
        type: string
        description: "client identification"
        example: "ae6565c1-c684-4c2e-ac8f-4ea81d26b15f"
      code:
        type: string
        description: "quotation code identification"
        example: "CT0001-123"
      description:
        type: string
        description: "quotation description (limited to 255 characters)"
        example: "Test quotation for Fulana prospect"  
      information:
        type: "object"
        description: "field to add information that will be saved along with the insurance quote"
        example: {
          "prospect": {
            "id": "a7cbfde2-a6e8-4073-b9d7-ae62ab484d9c",
            "name": "Fulana"
          },
        }
      rate:
        type: "number"
        description: "Additional calculation rate"
        example: !!int 0
      capital:
        type: "number"
        description: "Insured Capital"
        example: !!float 250000
      parameters:
        $ref: '#/definitions/QuotationParametersEntity'
      price:
        $ref: '#/definitions/QuotationPriceEntity'
      product:
        $ref: '#/definitions/ProductQuotationEntity'
    required:
     - customer
     - product
     - capital
     - total 
  LoginEntity:
    type: "object"
    properties:
      email:
        type: string
        description: "user e-mail (limited to 255 characters)"
        example: "example@email.com"
      password:
        type: string
        description: "user passaword (limited to 255 characters)"
        example: "Test@123"
  LoginResponseEntity:
    type: "object"
    properties:
      email:
        type: string
        description: "user e-mail"
        example: "example@email.com"
      token:
        type: string
        description: "authorization token"
        example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c"
  ResponseStatus422:
    type: "array"
    description: "List of messages (erros, warnings, etc.)"
    items:
      type: "string"
    example: [
      "Age parameter is required for product selected",
      "Gender parameter is required for product selected",
      "Product AB05F is not available for insurance quote for the provided client_id"
    ]   
  Exception:
    type: "object"
    properties:
      timestamp:
        type: "string"
        description: "Date and time of occurrence"
        example: "2020-07-03T11:19:32.3056644Z"
      path:
        type: "string"
        description: "Path"
        example: "/v1/products/WLUPF"
      status:
        type: "integer"
        description: "HTTP response code"
        example: !!int 500
      message:
        type: "string"
        description: "Message"
        example: "Internal Server Error"
      requestId:
        type: "string"
        description: "Request Id"
        example: "0HM0V8BQQ7O3Q:00000001"
      method:
        type: "string"
        description: "Method"
        example: "GET"
      stack:
        type: "string"
        description: "Stack"
        example: null
  NotFound:
    type: "object"
    properties:
      type:
        type: "string"
        description: "Type"
        example: "https://tools.ietf.org/html/rfc7231#section-6.5.4"
      title:
        type: "string"
        description: " Title"
        example: "Not Found"
      status:
        type: "integer"
        description: "Status"
        example: !!int 404
      traceId:
        type: "string"
        description: "Trace Id"
        example: "|6a4210c1-4cd93916ced1de60."
  BadRequest:
    type: "object"
    properties:
      type:
        type: "string"
        description: "Type"
        example: "https://tools.ietf.org/html/rfc7231#section-6.5.1"
      title:
        type: "string"
        description: " Title"
        example: "One or more validation errors occurred."
      status:
        type: "integer"
        description: "Status"
        example: !!int 400
      traceId:
        type: "string"
        description: "Trace Id"
        example: "|aa2c469d-486b542df70f01dc."
      errors:
        type: "object"
        example: {
          "$.rate": [
            "The JSON value could not be converted to System.Single. Path: $.rate | LineNumber: 9 | BytePositionInLine: 13."
          ]
        }
securityDefinitions:
  Bearer:
    type: "apiKey"
    in: "header"
    name: "Authorization"
externalDocs:
  description: "Find out more about Swagger"
  url: "http://swagger.io"
